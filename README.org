#+TITLE: Progetto scuola

* Table of Contents :TOC_3:noexport:
- [[#compiti][Compiti]]
  - [[#leonardo-bizzoni][Leonardo Bizzoni]]
  - [[#cristian-bonomi][Cristian Bonomi]]
  - [[#vincenzo-palermo][Vincenzo Palermo]]
  - [[#samuel-codispoti][Samuel Codispoti]]
- [[#tecnologie-utilizzate][Tecnologie utilizzate]]
  - [[#parte-arduino][Parte arduino]]
  - [[#parte-server][Parte server]]
- [[#implementazione][Implementazione]]
  - [[#codice-arduino][Codice arduino]]
    - [[#librerie-e-inizializzazione-variabili][Librerie e inizializzazione variabili]]
    - [[#funzione-di-setup][Funzione di setup]]
    - [[#funzione-di-loop][Funzione di loop]]
  - [[#codice-backend---php][Codice backend - PHP]]
    - [[#arduinohandler---come-registrare-il-dato-rilevato-dal-sensore-nel-database][ArduinoHandler - Come registrare il dato rilevato dal sensore nel database]]
    - [[#userhandler---come-prelevare-i-dati-dal-database][UserHandler - Come prelevare i dati dal database]]

* Compiti
** Leonardo Bizzoni
- Programmazione arduino
- Gestione interazioni arduino → server, client → server
- Documentazione del progetto

** Cristian Bonomi
- Gestione DB con phpMyAdmin
- UML

** Vincenzo Palermo
- Gestione DB con phpMyAdmin
- Programmazione front-end

** Samuel Codispoti
- Programmazione front-end
- Gestione interazioni client → server

* Tecnologie utilizzate
** Parte arduino
Hardware:
- Arduino board
- Passive infrared motion sensor
- Ethernet shield

Collegare supporto ethernet alla board arduino e il sensore.
Il sensore rileva i dati e li comunica alla board che a sua volta li invia al server attraverso una HTTP/POST request.

** Parte server
Tecnologie:
- JSON
- Apache
- phpMyAdmin
- PHP

Apache riceve la HTTP/POST request.
PHP elabora la request leggendo i dati, scrive una SQL query per inserirli nel DB.

Quando un client accede alla pagina web, JS invia una HTTP/GET request al server per leggere i dati nel DB.
PHP elabora la request, preleva i dati dal DB e li formatta in JSON per inviarli al client.
Il client riceve il JSON, preleva i dati e li mostra sulla pagina web.

* Implementazione
** Codice arduino
*** Librerie e inizializzazione variabili
La libreria /Ethernet.h/ permette ad Arduino con dispositivi di reti basati su W5100 / W5200 / *W5500* di connetersi alla rete.
#+begin_src cpp :tangle ./Arduino/main.ino
#include <Ethernet.h>
#+end_src

Crea una constante /pirSensor/ con il valore 2 che è il pin sulla board arduino a cui il PIR sensor è collegato.
#+begin_src cpp :tangle ./Arduino/main.ino
#define pirSensor 2
#+end_src

È necessario specificare l'indirizzo MAC, IP dell'arduino e l'indirizzo IP del server a cui vogliamo connetterci.
È possibile utilizzare un domain name al posto dell'IP del server ma, per semplicità, utlizzeremo l'IP numerico.
#+begin_src cpp :tangle ./Arduino/main.ino
byte mac[] = { 0xA8, 0x61, 0x0A, 0xAE, 0x84, 0xB4 };
IPAddress ip(192, 168, 1, 177);

IPAddress server(192,168,1,146);

EthernetClient client;
String postData;
#+end_src

*** Funzione di setup
Imposta la constante /pirSensor/ in modalità ingresso per la lettura dei dati.
Comincia la sessione ethernet e aspetta che si inizializzi l'ethernet shield.

#+begin_src cpp :tangle ./Arduino/main.ino
void setup() {
  pinMode(pirSensor, INPUT);

  Ethernet.begin(mac, ip); // apre la sessione ethernet

  delay(1000);
}
#+end_src

*** Funzione di loop
La funziona /loop/ viene chiamata costantemente, ogni ciclo controlla che il valore letto dal PIR sensor sia /HIGH/ e prova a connetersi al server.
/client.connect(server, 80)/ restituisce /true/ se la connessione è avvenuta con successo e /false/ se qualcosa non è andato a buon fine.

Se il valore letto è /HIGH/ e riesce a connettersi al server allora invia una HTTP/POST con il valore /data=movimento/ che il server dovrà poi ricevere e immagazzinare nel database.

#+begin_src cpp :tangle ./Arduino/main.ino
void loop() {
  if (digitalRead(pirSensor) == HIGH && client.connect(server, 80)) {
    postData = "datiSensore=movimento";

    client.println("POST /ProgettoScuola0/index.php HTTP/1.1");
    client.print("Host: ");
    client.println(server);
    client.println("Content-Type: application/x-www-form-urlencoded");
    client.print("Content-Length: ");
    client.println(postData.length());
    client.println();
    client.println(postData);

    delay(2000);
  }

  if (client.connected())
    client.stop();
}
#+end_src

** Codice backend - PHP
Ogni volta che il sensore PIR montato sull'arduino rileva movimento lo invia alla pagina "index.php".
Index.php, oltre a contenere il codice HTML da mostrare all'utente, include 2 script:
- *arduinoHandler.php*: gestisce le richieste che riceve dall'arduino
- *userHandler.php*: gestisce le richieste che riceve dall'utente

*** ArduinoHandler - Come registrare il dato rilevato dal sensore nel database
/Questo viene incluso utilizzando "include" in index.php./

Se nell'array "$_POST" esiste il campo "arduinoData", la richiesta proviene dall'arduino e bisogna registarla nel database.

Per registrare il valore nel database bisogna creare un oggetto "mysqli" fornendo come parametri:
- *indirizzo IP + numero di porta*
- *username*
- *password*
- *nome del database*
Se questa fase fallisce allora viene chiamata la funzione "die" con un messaggio che mostra l'errore.

Una volta creato l'oggetto "mysqli" possiamo utilizzarne il metodo "query" per invia una query al database.

#+begin_src php :tangle ./php/arduinoHandler.php
<?php
if (isset($_POST["datiSensore"])) {
    $sql = new mysqli("localhost:3306", "root", "", "DatiSensore") or die("Connection error:" . $sql->error);
    $sql->query("INSERT INTO `Valori`(`num_persone`, `timestamp_lettura`) VALUES ('1','".date("Y-m-d H:i:s")."')");

    $sql->close();
}
?>
#+end_src

*** UserHandler - Come prelevare i dati dal database
#+begin_src php :tangle ./php/userHandler.php
<?php
if (is_null($_POST["data"])) {
    $sql = new mysqli("localhost:3306", "root", "", "DatiSensore") or die("Connection error:" . $sql->error);
    $result = $sql->query("SELECT * FROM `Valori`");

    while ($row = $result->fetch_assoc()) {
        print_r($row);
        echo "</br>";
    }

    $sql->close();
}
?>
#+end_src
