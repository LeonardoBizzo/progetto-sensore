#+TITLE: Progetto scuola

* Progetto che prima o poi avrà un nome
** Compiti
*** Leonardo Bizzoni
- Programmazione arduino
- Gestione interazioni arduino → server, client → server
- Documentazione del progetto

*** Cristian Bonomi
- Gestione DB con phpMyAdmin
- UML

*** Vincenzo Palermo
- Gestione DB con phpMyAdmin
- Programmazione front-end

*** Samuel Codispoti
- Programmazione front-end
- Gestione interazioni client → server

** Tecnologie
*** Parte arduino
Hardware:
- Arduino board
- Passive infrared motion sensor
- Ethernet shield

Collegare supporto ethernet alla board arduino e il sensore.
Il sensore rileva i dati e li comunica alla board che a sua volta li invia al server attraverso una HTTP/GET request.

*** Parte server
Tecnologie:
- JSON
- Apache
- phpMyAdmin
- PHP

Apache riceve la HTTP/GET request.
PHP elabora la request leggendo i dati, scrive una SQL query per inserirli nel DB.

Quando un client accede alla pagina web, JS invia una HTTP/GET request al server per leggere i dati nel DB.
PHP elabora la request, preleva i dati dal DB e li formatta in JSON per inviarli al client.
Il client riceve il JSON, preleva i dati e li mostra sulla pagina web.

** Idee
*** 1 - Acquisizione dati
Arduino legge valori da un sensore infrarossi.
Invia una get request (php).
Php prende i dati della get e li mette su un DB.

*** 2 - Comunicazione con la pagina web
Un client invia una richiesta al server per i valori letti dall'arduino (che sono nel DB)
Ogni tot il client invia una request al server.

Php riceve la request recupera i dati e li formatta in JSON e lo manda al client.
Php risponde con il JSON

JS se ci sono più di 15 persone cambia il colore di un quadratino sulla pagina a rosso. (Normalmente è verde)
Per ogni persona che entra mostrare un'icona sulla pagina.

*** 3
Il client riceve il JSON, lo interpreta e aggiorna il grafico.

/Ogni tot cambia colore il grafico per simbologgiare il valore letto/.
